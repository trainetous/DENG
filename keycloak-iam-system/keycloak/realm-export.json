{
  "realm": "flask-demo",
  "enabled": true,
  "displayName": "Flask Demo Realm",
  "accessTokenLifespan": 300,
  "accessCodeLifespan": 60,
  "refreshTokenMaxReuse": 0,
  "ssoSessionIdleTimeout": 1800,
  "ssoSessionMaxLifespan": 36000,
  "requiredCredentials": ["password"],
  "passwordPolicy": "hashIterations(27500)",
  "otpPolicyType": "totp",
  "otpPolicyAlgorithm": "HmacSHA1",
  "otpPolicyInitialCounter": 0,
  "otpPolicyDigits": 6,
  "otpPolicyLookAheadWindow": 1,
  "otpPolicyPeriod": 30,
  "clients": [
    {
      "clientId": "flask-app",
      "name": "Flask Application",
      "description": "Flask app with Keycloak integration",
      "enabled": true,
      "clientAuthenticatorType": "client-secret",
      "secret": "flask-app-secret-key-12345",
      "redirectUris": [
        "http://localhost:5000/*",
        "http://flask-app:5000/*"
      ],
      "webOrigins": [
        "http://localhost:5000",
        "http://flask-app:5000"
      ],
      "protocol": "openid-connect",
      "publicClient": false,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": true,
      "authorizationServicesEnabled": false,
      "fullScopeAllowed": true,
      "protocolMappers": [
        {
          "name": "username",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "preferred_username",
            "jsonType.label": "String"
          }
        },
        {
          "name": "email",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "email",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "role_list",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    }
  ],
  "users": [
    {
      "username": "testuser",
      "enabled": true,
      "emailVerified": true,
      "email": "testuser@example.com",
      "firstName": "Test",
      "lastName": "User",
      "credentials": [
        {
          "type": "password",
          "value": "testpassword",
          "temporary": false
        }
      ],
      "realmRoles": ["user"],
      "clientRoles": {
        "flask-app": ["app-user"]
      }
    },
    {
      "username": "admin",
      "enabled": true,
      "emailVerified": true,
      "email": "admin@example.com",
      "firstName": "Admin",
      "lastName": "User",
      "credentials": [
        {
          "type": "password",
          "value": "adminpassword",
          "temporary": false
        }
      ],
      "realmRoles": ["user", "admin"],
      "clientRoles": {
        "flask-app": ["app-user", "app-admin"]
      }
    }
  ],
  "roles": {
    "realm": [
      {
        "name": "user",
        "description": "User role"
      },
      {
        "name": "admin",
        "description": "Admin role"
      }
    ],
    "client": {
      "flask-app": [
        {
          "name": "app-user",
          "description": "Application user role"
        },
        {
          "name": "app-admin",
          "description": "Application admin role"
        }
      ]
    }
  },
  "groups": [
    {
      "name": "users",
      "path": "/users",
      "realmRoles": ["user"]
    },
    {
      "name": "admins",
      "path": "/admins",
      "realmRoles": ["admin"]
    }
  ]
}